//hsl($hue,$saturation,$lightness)：通过色相（hue）、饱和度(saturation)和亮度（lightness）的值创建一个颜色；
//hsla($hue,$saturation,$lightness,$alpha)：通过色相（hue）、饱和度(saturation)、亮度（lightness）和透明（alpha）的值创建一个颜色；
//hue($color)：从一个颜色中获取色相（hue）值；
//saturation($color)：从一个颜色中获取饱和度（saturation）值；
//lightness($color)：从一个颜色中获取亮度（lightness）值；
//adjust-hue($color,$degrees)：通过改变一个颜色的色相值，创建一个新的颜色；
//lighten($color,$amount)：通过改变颜色的亮度值，让颜色变亮，创建一个新的颜色；
//darken($color,$amount)：通过改变颜色的亮度值，让颜色变暗，创建一个新的颜色；
//saturate($color,$amount)：通过改变颜色的饱和度值，让颜色更饱和，从而创建一个新的颜色
//desaturate($color,$amount)：通过改变颜色的饱和度值，让颜色更少的饱和，从而创建出一个新的颜色；
//grayscale($color)：将一个颜色变成灰色，相当于desaturate($color,100%);
//complement($color)：返回一个补充色，相当于adjust-hue($color,180deg);
//invert($color)：反回一个反相色，红、绿、蓝色值倒过来，而透明度不变。

@mixin _clearfix {
  &:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
  }
}

@mixin _background($color) {
  background-color: $color;

  [data-theme="theme1"] & {
    background-color: darken($color, 10%);
  }
}

@mixin _background_opacity($color, $num) {
  background-color: transparentize($color, $num);

  [data-theme="theme1"] & {
    background-color: darken(transparentize($color, $num), 10%);
  }
}

@mixin _color($color) {
  color: $color;

  [data-theme="theme1"] & {
    color: darken($color, 10%);
  }
}

@mixin _square($size) {
  height: $size;
  width: $size;
}

@mixin _color_important($color) {
  color: $color !important;

  [data-theme="theme1"] & {
    color: darken($color, 10%) !important;
  }
}

@mixin _borderColor($color) {
  border-color: $color;

  [data-theme="theme1"] & {
    border-color: darken($color, 10%);
  }
}

@mixin placeholder($color) {

  // Firefox
  &::-moz-placeholder {
    color: $color;
    opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }

  // Internet Explorer 10+
  &:-ms-input-placeholder {
    color: $color;
  }

  // Safari and Chrome
  &::-webkit-input-placeholder {
    color: $color;
  }

  &::-ms-clear,
  &::-ms-reveal {
    display: none;
  }
}

@mixin _iconArrow() {
  position: absolute;
  top: 50%;
  margin-top: -6px;
  transition: all .2s ease-in-out;
}

@mixin _loop() {
  animation: load-loop 1s linear infinite
}

@keyframes load-loop {
  from {
    transform: rotate(0)
  }
  50% {
    transform: rotate(180deg)
  }
  to {
    transform: rotate(360deg)
  }
}

@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}